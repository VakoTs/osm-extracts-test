name: Build Photon Tbilisi Data

on:
  schedule:
    - cron: '0 0 * * 0'
  workflow_dispatch:

jobs:
  build-photon-data:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set release info
        id: version
        run: |
          echo "tag=photon-tbilisi-latest" >> $GITHUB_OUTPUT
          echo "filename=photon-db-tbilisi-latest" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y osmium-tool wget bzip2

      - name: Download Georgia OSM data
        run: |
          wget https://download.geofabrik.de/europe/georgia-latest.osm.pbf

      - name: Extract Tbilisi bbox
        run: |
          osmium extract --bbox 44.65,41.60,45.05,41.75 georgia-latest.osm.pbf -o tbilisi.osm.pbf
          ls -lh tbilisi.osm.pbf

      - name: Start PostgreSQL with PostGIS
        run: |
          # Clean up any existing containers
          docker rm -f postgres || true

          docker run -d --name postgres \
            -e POSTGRES_USER=nominatim \
            -e POSTGRES_PASSWORD=nominatim \
            -e POSTGRES_DB=postgres \
            -p 5432:5432 \
            postgis/postgis:14-3.3-alpine

          # Wait for PostgreSQL to be ready
          timeout 60 bash -c 'until docker exec postgres pg_isready -U nominatim; do sleep 2; done'

          # Create www-data user for Nominatim
          docker exec postgres psql -U nominatim -d postgres -c "CREATE USER \"www-data\";"

      - name: Run Nominatim import
        run: |
          # Clean up any existing nominatim container
          docker rm -f nominatim || true

          docker run --rm --name nominatim \
            --network host \
            -e PBF_PATH=/data/tbilisi.osm.pbf \
            -e NOMINATIM_PASSWORD=nominatim \
            -e NOMINATIM_DATABASE_DSN="pgsql:host=localhost;port=5432;user=nominatim;password=nominatim;dbname=nominatim" \
            -e NOMINATIM_TOKENIZER=icu \
            -v $(pwd):/data \
            mediagis/nominatim:4.4 \
            sh -c "nominatim import --osm-file /data/tbilisi.osm.pbf --threads 2"

      - name: Download Photon
        run: |
          wget https://github.com/komoot/photon/releases/download/0.7.4/photon-opensearch-0.7.4.jar -O photon.jar

      - name: Export Photon data from Nominatim
        run: |
          mkdir -p photon_data
          java -Xmx4g -jar photon.jar \
            -nominatim-import \
            -host localhost \
            -port 5432 \
            -database nominatim \
            -user nominatim \
            -password nominatim \
            -languages en,ka,ro,hu \
            -data-dir photon_data

          # Verify the data was created
          ls -la photon_data/
          du -sh photon_data/

      - name: Create archive
        run: |
          # Archive only the inner photon_data directory contents
          cd photon_data
          tar -cjf ../${{ steps.version.outputs.filename }}.tar.bz2 photon_data
          cd ..
          ls -lh ${{ steps.version.outputs.filename }}.tar.bz2

      - name: Create or update release
        run: |
          # Delete existing release and tag if they exist
          gh release delete ${{ steps.version.outputs.tag }} --yes || true
          git push --delete origin ${{ steps.version.outputs.tag }} || true

          # Create new release
          gh release create ${{ steps.version.outputs.tag }} \
            ${{ steps.version.outputs.filename }}.tar.bz2 \
            --title "Photon Tbilisi Data" \
            --notes "Photon geocoding database for Tbilisi, Georgia (bbox: 44.65,41.60,45.05,41.75). Languages: en, ka, ro, hu. Generated from OSM data on $(date +'%Y-%m-%d')."
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Cleanup
        if: always()
        run: |
          docker stop postgres nominatim || true
          docker rm postgres nominatim || true
